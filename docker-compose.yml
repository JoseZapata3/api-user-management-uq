services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    ports:
      - "1234:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
  app:
    image: my-quarkus-app:latest
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.native-micro
    environment:
      QUARKUS_DATASOURCE_DB_KIND: postgresql
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgres:5432/mydatabase
      QUARKUS_DATASOURCE_USERNAME: postgres
      QUARKUS_DATASOURCE_PASSWORD: postgres
      QUARKUS_HIBERNATE_ORM_DATABASE_GENERATION: drop-and-create
      QUARKUS_PULSAR_SERVICE_URL: pulsar://pulsar:6650
    ports:
      - "8087:8080"
    volumes:
      - chronicle_logs:/var/log/chronicle
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      postgres:
        condition: service_started
      pulsar:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  consul:
    image: consul:1.15.4
    ports:
      - "8500:8500" # Interfaz web de Consul
      - "8600:8600/udp" # DNS de Consul
    volumes:
      - ./config/consul/config:/etc/consul.d # Monta el directorio de configuraciÃ³n
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0 -config-dir=/etc/consul.d
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  logstash:
    image: docker.elastic.co/logstash/logstash:8.5.1
    volumes:
      - ./config/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
      - chronicle_logs:/var/log/chronicle
    environment:
      - "LS_JAVA_OPTS=-Xms256m -Xmx256m"
    depends_on:
      - elasticsearch
    ports:
      - "5044:5044"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
  kibana:
    image: docker.elastic.co/kibana/kibana:8.5.1
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - "NODE_OPTIONS=--max-old-space-size=256"
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
  pulsar:
    image: apachepulsar/pulsar:3.2.0
    container_name: pulsar-standalone
    ports:
      - "6650:6650"
      - "8081:8080"
    command: >
      bash -c "bin/pulsar standalone --advertised-address localhost --no-functions-worker -nss"
    volumes:
    - pulsar_data:/pulsar/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/admin/v2/brokers/healthcheck" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  notification-service:
    build:
      context: /home/jose.zapata/Documents/University/APIs-development/restful-notifications
      dockerfile: Dockerfile
    container_name: notification_service
    user: root
    environment:
      MP_MESSAGING_CONNECTOR_SMALLRYE_PULSAR_SERVICEURL: pulsar://pulsar:6650
    ports:
      - "8088:8080"
    depends_on:
      pulsar:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
volumes:
  postgres_data:
  chronicle_logs:
  pulsar_data:
